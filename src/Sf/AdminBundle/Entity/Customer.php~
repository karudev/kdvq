<?php

namespace Sf\AdminBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;
use Gedmo\Translatable\Translatable;

/**
 * Customer
 *
 * @ORM\Table(name="customer")
 * @ORM\Entity(repositoryClass="Sf\AdminBundle\Entity\CustomerRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Customer implements Translatable
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="customer_name", type="string", length=255)
     */
    private $customerName;


    /**
     * @var string
     *
     * @ORM\Column(name="linkName", type="string", length=128)
     */
    private $linkName;

    /**
     * @var string
     *
     * @ORM\Column(name="customerSite", type="string", length=255)
     */
    private $customerlink;

    /**
     * @var string
     * @Gedmo\Translatable
     * @ORM\Column(name="text", type="text")
     */
    private $text;


    /**
     * @var boolean
     *
     * @ORM\Column(name="active", type="boolean", nullable=true)
     */
    private $active;

      /**
     * @var string
     *
     * @ORM\Column(name="main_picture", type="string", length=255, nullable=true)
     */
    private $mainPicture;

    /**
     * @var string
     *
     * @ORM\Column(name="second_picture", type="string", length=255, nullable=true)
     */
    private $secondPicture;

    /**
     * @var string
     *
     * @ORM\Column(name="brand_color_picture", type="string", length=255, nullable=true)
     */
    private $brandColorPicture;

    /**
     * @var string
     *
     * @ORM\Column(name="brand_nb_picture", type="string", length=255, nullable=true)
     */
    private $brandNbPicture;

    /**
     *
     * @Assert\Image(maxSize="6000000")
     */
    private $mainPictureFile;

    /**
     *
      * @Assert\Image(maxSize="6000000")
     */
    private $secondPictureFile;

    /**
      *
      * @Assert\Image(maxSize="6000000")
      */
    private $brandColorPictureFile;

    /**
      *
      * @Assert\Image(maxSize="6000000")
      */
    private $brandNbPictureFile;

    /**
     * @var string
     * @Gedmo\Slug(fields={"customerName"})
     * @ORM\Column(name="slug", type="string", length=255)
     */
    private $slug;

    /** @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    private $createdAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="updated_at", type="datetime")
     */
    private $updatedAt;

    /**
    *
    *  @ORM\ManyToMany(targetEntity="\Sf\AdminBundle\Entity\CustomerInfo", cascade={"persist"})
    */
    private $customerInfos;


    /**
     * @Gedmo\Locale
     * Used locale to override Translation listener`s locale
     * this is not a mapped field of entity metadata, just a simple property
     */
    private $locale;
    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set customerName
     *
     * @param string $customerName
     * @return Customer
     */
    public function setCustomerName($customerName)
    {
        $this->customerName = $customerName;

        return $this;
    }

    /**
     * Get customerName
     *
     * @return string
     */
    public function getCustomerName()
    {
        return $this->customerName;
    }

    /**
     * Set campaignName
     *
     * @param string $campaignName
     * @return Customer
     */
    public function setCampaignName($campaignName)
    {
        $this->campaignName = $campaignName;

        return $this;
    }

    /**
     * Get campaignName
     *
     * @return string
     */
    public function getCampaignName()
    {
        return $this->campaignName;
    }

    /**
     * Set linkName
     *
     * @param string $linkName
     * @return Customer
     */
    public function setLinkName($linkName)
    {
        $this->linkName = $linkName;

        return $this;
    }

    /**
     * Get linkName
     *
     * @return string
     */
    public function getLinkName()
    {
        return $this->linkName;
    }


    /**
     * Set text
     *
     * @param string $text
     * @return Customer
     */
    public function setText($text)
    {
        $this->text = $text;

        return $this;
    }

    /**
     * Get text
     *
     * @return string
     */
    public function getText()
    {
        return $this->text;
    }

    /**
     * Set title
     *
     * @param string $title
     * @return Customer
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set subTitle
     *
     * @param string $subTitle
     * @return Customer
     */
    public function setSubTitle($subTitle)
    {
        $this->subTitle = $subTitle;

        return $this;
    }

    /**
     * Get subTitle
     *
     * @return string
     */
    public function getSubTitle()
    {
        return $this->subTitle;
    }

    /**
     * Set active
     *
     * @param boolean $active
     * @return Customer
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set mainPicture
     *
     * @param string $mainPicture
     * @return Customer
     */
    public function setMainPicture($mainPicture)
    {
        $this->mainPicture = $mainPicture;

        return $this;
    }

    /**
     * Get mainPicture
     *
     * @return string
     */
    public function getMainPicture()
    {
        return $this->mainPicture;
    }

    /**
     * Set secondPicture
     *
     * @param string $secondPicture
     * @return Customer
     */
    public function setSecondPicture($secondPicture)
    {
        $this->secondPicture = $secondPicture;

        return $this;
    }

    /**
     * Get secondPicture
     *
     * @return string
     */
    public function getSecondPicture()
    {
        return $this->secondPicture;
    }

    /**
     * Set brandColorPicture
     *
     * @param string $brandColorPicture
     * @return Customer
     */
    public function setBrandColorPicture($brandColorPicture)
    {
        $this->brandColorPicture = $brandColorPicture;

        return $this;
    }

    /**
     * Get brandColorPicture
     *
     * @return string
     */
    public function getBrandColorPicture()
    {
        return $this->brandColorPicture;
    }

    /**
     * Set brandNbPicture
     *
     * @param string $brandNbPicture
     * @return Customer
     */
    public function setBrandNbPicture($brandNbPicture)
    {
        $this->brandNbPicture = $brandNbPicture;

        return $this;
    }

    /**
     * Get brandNbPicture
     *
     * @return string
     */
    public function getBrandNbPicture()
    {
        return $this->brandNbPicture;
    }

    /**
     * Set slug
     *
     * @param string $slug
     * @return Customer
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Get slug
     *
     * @return string
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     * @return Customer
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }
    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->customerInfos = new \Doctrine\Common\Collections\ArrayCollection();
    }

    public function __toString()
    {
      return $this->customerName;
    }
    /**
     * @ORM\PrePersist
     */
    public function CcreatedDateTime() {
        $this->createdAt = new \DateTime();
        $this->updatedAt = new \DateTime();
    }

    /**
     * @ORM\PreUpdate()
     */
    public function updatedDateTime(){
      $this->updatedAt = new \dateTime();
    }


    /**
     * Set customerlink
     *
     * @param string $customerlink
     * @return Customer
     */
    public function setCustomerlink($customerlink)
    {
        $this->customerlink = $customerlink;

        return $this;
    }

    /**
     * Get customerlink
     *
     * @return string
     */
    public function getCustomerlink()
    {
        return $this->customerlink;
    }

    /**
     * Set titleCarousel
     *
     * @param string $titleCarousel
     * @return Customer
     */
    public function setTitleCarousel($titleCarousel)
    {
        $this->titleCarousel = $titleCarousel;

        return $this;
    }

    /**
     * Get titleCarousel
     *
     * @return string
     */
    public function getTitleCarousel()
    {
        return $this->titleCarousel;
    }

    /**
     * Set subTitleCarousel
     *
     * @param string $subTitleCarousel
     * @return Customer
     */
    public function setSubTitleCarousel($subTitleCarousel)
    {
        $this->subTitleCarousel = $subTitleCarousel;

        return $this;
    }

    /**
     * Get subTitleCarousel
     *
     * @return string
     */
    public function getSubTitleCarousel()
    {
        return $this->subTitleCarousel;
    }

    /**
     * Add customerInfos
     *
     * @param \Sf\AdminBundle\Entity\CustomerInfos $customerInfos
     * @return Customer
     */
    public function addCustomerInfo(\Sf\AdminBundle\Entity\CustomerInfo $customerInfo)
    {
        $this->customerInfos[] = $customerInfo;

        return $this;
    }

    /**
     * Remove customerInfos
     *
     * @param \Sf\AdminBundle\Entity\CustomerInfos $customerInfos
     */
    public function removeCustomerInfo(\Sf\AdminBundle\Entity\CustomerInfo $customerInfo)
    {
        $this->customerInfos->removeElement($customerInfo);
    }

    /**
     * Get customerInfos
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCustomerInfos()
    {
        return $this->customerInfos;
    }

    /**
     * Set mainPictureFile
     *
     * @param object $mainPictureFile
     */
    public function setMainPictureFile($mainPictureFile)
    {
        $this->mainPictureFile = $mainPictureFile;
    }

    /**
     * Get mainPictureFile
     *
     * @return object
     */
    public function getMainPictureFile()
    {
        return $this->mainPictureFile;
    }

    /**
     * Set secondPictureFile
     *
     * @param object $secondPictureFile
     */
    public function setSecondPictureFile($secondPictureFile)
    {
        $this->secondPictureFile = $secondPictureFile;
    }
    /**
     * Get secondPictureFile
     *
     * @return object
     */
    public function getSecondPictureFile()
    {
        return $this->secondPictureFile;
    }
    /**
     * Get BrandColorPictureFile
     *
     * @return object
     */
    public function getBrandColorPictureFile()
    {
        return $this->brandColorPictureFile;
    }
    /**
     * Set BrandColorPictureFile
     *
     * @param object $BrandColorPictureFile
     */
    public function setBrandColorPictureFile($BrandColorPictureFile)
    {
        $this->brandColorPictureFile = $BrandColorPictureFile;
    }
    /**
     * Get secondPictureFile
     *
     * @return object
     */
    public function getBrandNbPictureFile()
    {
        return $this->brandNbPictureFile;
    }
    /**
     * Set BrandNbPictureFile
     *
     * @param object $BrandNbPictureFile
     */
    public function setBrandNbPictureFile($BrandNbPictureFile)
    {
        $this->brandNbPictureFile = $BrandNbPictureFile;
    }



    /**
     * Set type
     *
     * @param string $type
     * @return Customer
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }
}
