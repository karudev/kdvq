<?php

namespace Sf\AdminBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\Filesystem\Exception\IOException;

/**
 * SocialLink
 *
 * @ORM\Table(name="social_link")
 * @ORM\Entity(repositoryClass="Sf\AdminBundle\Entity\SocialLinkRepository")
 * @ORM\HasLifecycleCallbacks
 */
class SocialLink
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=64)
     */
    private $name;

      /**
       *
       * @Assert\Image(maxSize="6000000")
       */
      private $iconFile;

      /**
       * @var string
       *
       * @ORM\Column(name="iconUrl", type="string", length=128, nullable=true)
       */
      private $iconUrl;


    /**
     * @var string
     *
     * @ORM\Column(name="link", type="string", length=255)
     */
    private $link;

    /**
     * @var boolean
     *
     * @ORM\Column(name="active", type="boolean", nullable=true)
     */
    private $active;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    private $createdAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="updated_at", type="datetime")
     */
    private $updatedAt;

     /**
     * @ORM\ManyToOne(targetEntity="Sf\AdminBundle\Entity\Lang")
     * @ORM\JoinColumn(name="lang_id", referencedColumnName="id")
     */
    private $lang;


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return SocialLink
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set link
     *
     * @param string $link
     * @return SocialLink
     */
    public function setLink($link)
    {
        $this->link = $link;

        return $this;
    }

    /**
     * Get link
     *
     * @return string
     */
    public function getLink()
    {
        return $this->link;
    }

    /**
     * Set active
     *
     * @param boolean $active
     * @return SocialLink
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     * @return SocialLink
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     * @return SocialLink
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }



    /**
     * Set lang
     *
     * @param \Sf\AdminBundle\Entity\Lang $lang
     * @return SocialLink
     */
    public function setLang(\Sf\AdminBundle\Entity\Lang $lang = null)
    {
        $this->lang = $lang;

        return $this;
    }

    /**
     * Get lang
     *
     * @return \Sf\AdminBundle\Entity\Lang
     */
    public function getLang()
    {
        return $this->lang;
    }




        /**
         * @ORM\PrePersist
         */
        public function CcreatedDateTime() {
            $this->createdAt = new \DateTime();
            $this->updatedAt = new \DateTime();
        }

        /**
         * @ORM\PreUpdate()
         */
        public function updatedDateTime(){
          $this->updatedAt = new \dateTime();
        }

       /**
         * @ORM\PrePersist()
         * @ORM\PreUpdate()
         */
        public function preUpload()
        {
            if (null !== $this->iconFile) {
                $this->iconUrl = uniqid().'.'.$this->iconFile->guessExtension();
            }
        }

        /**
         * @ORM\PostPersist()
         * @ORM\PostUpdate()
         */
        public function upload()
        {
            if (null === $this->iconFile) {
                return;
            }

            $this->iconFile->move($this->getUploadRootDir(), $this->iconUrl);
            unset($this->iconFile);
        }

        /**
         * @ORM\PostRemove()
         */
        public function removeUpload()
        {
            if ($iconFile = $this->getAbsolutePath()) {
                $fs = new Filesystem();
                if($fs->exists($this->getAbsolutePath())){
                  unlink($iconFile);
                }
            }
        }

        public function getAbsolutePath()
        {
            return null === $this->iconUrl ? null : $this->getUploadRootDir().'/'.$this->iconUrl;
        }

        public function getWebPath()
        {
            return null === $this->iconUrl ? null : $this->getUploadDir().'/'.$this->iconUrl;
        }

        protected function getUploadRootDir()
        {
            return __DIR__.'/../../../../web/'.$this->getUploadDir();
        }

        protected function getUploadDir()
        {
            return 'uploads/socialLink';
        }




    /**
     * Set iconUrl
     *
     * @param string $iconUrl
     * @return SocialLink
     */
    public function setIconUrl($iconUrl)
    {
        $this->iconUrl = $iconUrl;

        return $this;
    }

    /**
     * Get iconUrl
     *
     * @return string
     */
    public function getIconUrl()
    {
        return $this->iconUrl;
    }
    /**
     * Set iconFile
     *
     * @param string $iconFile
     * @return SocialLink
     */
    public function setIconFile($iconFile)
    {
        $this->iconFile = $iconFile;

        return $this;
    }

    /**
     * Get iconFile
     *
     * @return string
     */
    public function getIconFile()
    {
        return $this->iconFile;
    }
}
